@page "/issue"
@inject HttpClient Http
@inject ApiDAO ApiDAO
@rendermode InteractiveServer

<PageTitle>Insert Issue</PageTitle>

<h1 class="text-center">Insert Issue</h1>

<div class="container justify-content-center text-center">
    <form>
        <div class="form-group">
            <label for="title" class="fs-3">Title</label>
            <input type="text" class="form-control" id="title" @bind="_issue.title" placeholder="Enter meaningful Title" @oninput="CheckFormValidity">
        </div>
        <div class="form-group pt-5">
            <label for="body" class="fs-4">Description</label>
            <textarea class="form-control" id="body" @bind="_issue.body" rows="3" placeholder="Enter short Description" @oninput="CheckFormValidity"></textarea>
        </div>
        <div class="form-group pt-5">
            <label for="labels" class="fs-4">Labels</label>
            <input type="text" class="form-control" id="labels" @bind="_issue.labels" placeholder="Enter labels (seperated with , )" @oninput="CheckFormValidity">
        </div>
        <div class="pt-5">
            <button class="btn btn-success" @onclick="InsertIssueAsync" type="button" disabled="@_isSubmitDisabled">Add Issue</button>
        </div>
    </form>
</div>

@code {
    private readonly IssueModel _issue = new IssueModel();
    private bool _isSubmitDisabled = true;

    private async Task InsertIssueAsync()
    {
        await ApiDAO.InsertIssueAsync(_issue);
    }

    private void CheckFormValidity()
    {
        _isSubmitDisabled = string.IsNullOrWhiteSpace(_issue.title) || string.IsNullOrWhiteSpace(_issue.body) && string.IsNullOrWhiteSpace(_issue.labels);
    }
}